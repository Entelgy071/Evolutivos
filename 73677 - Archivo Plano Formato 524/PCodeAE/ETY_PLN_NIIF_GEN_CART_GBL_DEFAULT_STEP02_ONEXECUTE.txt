/**************************************************************************************************************************
* Proyecto:	    FF_GL_ARCH_PLN_SCD_FIDU_000
* Actividad:  	001
* Responsable: 	Quanam – Alicia Szerenyi
* Fecha:		29May012
* Descripción:	Generación del archivo plano a partir de los registros temporales cargados en el paso anterior
***************************************************************************************************************************
* Proyecto:	    FF_GL_INC_31066_000
* Actividad:  	002
* Responsable: 	Datco – César García
* Fecha:		30dic2014
* Descripción:	Se modifica el árbol de las carteras colectivas
***************************************************************************************************************************/
/***************************************************************************************************
Actividad:  Tipo:   PROYECTO: 		Autor: 			Fecha: 			Descripción:
#003 		Nuevo.  ETY_ARCH_PLANO  Julian Parra    24 Jun 2015 	Ajuste para generar archivo incluyendo informacion de las cuentas NIIF
***************************************************************************************************/

Local File &fl_Carteras;
Local string &str1, &str2, &str3, &str4, &str5, &str6, &str7, &str8, &str9, &ledger;
Local string &strURL, &strFecha, &strTotalRegistros, &strCodFideicomiso, &strI, &tree_niif, &tree_d;
Local number &nbrI, &nbr5;
Local SQL &sql1, &sql2, &sql3, &sql4, &sql5;
Local boolean &bolSql3, &bolSql4;

SQLExec("SELECT ETY_VALOR FROM PS_ETY_PARAM_PLANO WHERE PARAM_NAME = 'ARBOL_COLECTIVAS_COLGAAP'", &tree_d);
SQLExec("SELECT ETY_VALOR FROM PS_ETY_PARAM_PLANO WHERE PARAM_NAME = 'ARBOL_COLECTIVAS_NIIF'", &tree_niif);

&bolSql3 = False;
&bolSql4 = False;
&strFecha = DateTimeToLocalizedString(%Date, "yyyyMMdd");
/* ASM - 28/11/2012 - Por uso de servers UNX se cambia el uso de URL por Filepath relativos
&strURL = GetURL(URL.FF_GL_ARCH_PLANOS);
&fl_Carteras = GetFile(&strURL | "CARTERAS_COLECTIVAS_" | &strFecha | ".txt", "W", %FilePath_Absolute);*/
&fl_Carteras = GetFile("CARTERAS_COLECTIVAS_" | &strFecha | ".txt", "W", %FilePath_Relative);
/**/
If &fl_Carteras.IsOpen Then
   /***********************************/
   /*REGISTRO TIPO 1*/
   SQLExec("SELECT LPAD(FF_ID_REGISTRO,8,0) FROM %TABLE(FF_GL_RT5_TMP) WHERE PROCESS_INSTANCE = :1", ETY_GL_INFM_AET.PROCESS_INSTANCE.Value, &strTotalRegistros);
   &sql1 = CreateSQL("SELECT FF_ID_REGISTRO, FF_TIPO_REGISTRO, FF_TIPO_ENTIDAD, FF_CODIGO_SFC, FF_FECHA_CORTE, FF_TOTAL_REGISTRO, FF_PALABRA_CLAVE, FF_AREA_INF, FF_TIPO_INFORME FROM %Table(FF_GL_RT1_TMP)  WHERE PROCESS_INSTANCE = :1", ETY_GL_INFM_AET.PROCESS_INSTANCE.Value);
   If &sql1.Fetch(&str1, &str2, &str3, &str4, &str5, &str6, &str7, &str8, &str9) Then
      &fl_Carteras.WriteString(&str1 | &str2 | &str3 | &str4 | &str5 | &strTotalRegistros | &str7 | &str8 | &str9);
   End-If;
   &fl_Carteras.WriteLine("");
   /***********************************/
   /*REGISTRO TIPO 2*/
   &nbrI = 1;
   &sql2 = CreateSQL("SELECT FF_ID_REGISTRO, FF_TIPO_REGISTRO, FF_COD_OFICINA, CONSTANTS, FF_TIPO_MONEDA, FF_TIPOINFORMACION, FF_TIPO_FIDEI, LPAD(FF_COD_FIDEICOMISO,6,0), LPAD(FF_CODIGO_SFC,6,0), FF_COD_FIDEICOMISO, FF_CODIGO_SFC, LEDGER FROM %Table(ETY_GLRT2_TMP) WHERE PROCESS_INSTANCE = :1 ORDER BY LEDGER, FF_COD_FIDEICOMISO, FF_CODIGO_SFC, FF_TIPOINFORMACION, FF_TIPO_MONEDA", ETY_GL_INFM_AET.PROCESS_INSTANCE.Value);
   While &sql2.Fetch(&str1, &str2, &str3, &str4, &str5, &str6, &str7, &str8, &str9, &strCodFideicomiso, &strFundCode, &ledger)
      &nbrI = &nbrI + 1;
      &strI = String(&nbrI);
      &str1 = Rept("0", 8 - Len(&strI)) | &strI;
      /*Si el campo FF_CODIGO_SFC es diferente de vacio, es un Compartimento y debo imprimir el FF_CODIGO_SFC en vez del FF_COD_FIDEICOMISO que se imprime para Carteras*/
      If All(&strFundCode) Then
         &fl_Carteras.WriteString(&str1 | &str2 | &str3 | &str4 | &str5 | &str6 | &str7 | &str9);
      Else
         &fl_Carteras.WriteString(&str1 | &str2 | &str3 | &str4 | &str5 | &str6 | &str7 | &str8);
      End-If;
      &fl_Carteras.WriteLine("");
      /***********************************/
      /*REGISTRO TIPO 3*/
      If (&str6 = "0") Then
         /*Son codigos PUC, reporto registros tipo 3*/
         rem &sql3 = CreateSQL("SELECT FF_ID_REGISTRO, FF_TIPO_REGISTRO, RPAD(FF_CODIGO_PUC,6,0), SIGN, ABS(FF_VALOR_ACTIVO) FROM PS_ETY_GLRT3_TMP WHERE PROCESS_INSTANCE = :1 AND FF_TIPO_MONEDA = :2 AND FF_COD_FIDEICOMISO = :3 AND FF_CODIGO_SFC = :4 ORDER BY FF_ID_REGISTRO", ETY_GL_INFM_AET.PROCESS_INSTANCE.value, &str5, &strCodFideicomiso, &strFundCode);
         /*Cuando ya tiene signo lo dejo (por ejemplo nodos fijos con saldo 0 ya vienen con signo +), sino pongo el signo en base a la configuracion del nodo*/
         /*inicio chga 002*/
         /* Inicio #003 */
         If &ledger = "DIARIO" Then
            &sql3 = CreateSQL("SELECT A.FF_ID_REGISTRO, A.FF_TIPO_REGISTRO, RPAD(A.FF_CODIGO_PUC,6,0), (CASE WHEN A.SIGN <> ' ' THEN A.SIGN ELSE (CASE WHEN B.FF_NATURALEZA = 'POSI' AND A.FF_VALOR_ACTIVO >=0 THEN '+' WHEN B.FF_NATURALEZA = 'NEGA' AND A.FF_VALOR_ACTIVO < 0 THEN '+' ELSE '-' END) END), ABS(A.FF_VALOR_ACTIVO) FROM %Table(ETY_GLRT3_TMP) A, PS_FF_GL_TRNODE_VW B WHERE A.PROCESS_INSTANCE = :1 AND A.FF_TIPO_MONEDA = :2 AND A.FF_COD_FIDEICOMISO = :3 AND FF_CODIGO_SFC = :4 AND B.SETID = 'SHARE' AND B.TREE_NAME = :5 AND A.FF_ID_REGISTRO = B.TREE_NODE_NUM AND LEDGER = 'DIARIO' ORDER BY to_number(A.FF_ID_REGISTRO)", ETY_GL_INFM_AET.PROCESS_INSTANCE.Value, &str5, &strCodFideicomiso, &strFundCode, &tree_d);
         End-If;
         If &ledger = "NIIF" Then
            &sql3 = CreateSQL("SELECT A.FF_ID_REGISTRO, A.FF_TIPO_REGISTRO, RPAD(A.FF_CODIGO_PUC,6,0), (CASE WHEN A.SIGN <> ' ' THEN A.SIGN ELSE (CASE WHEN B.FF_NATURALEZA = 'POSI' AND A.FF_VALOR_ACTIVO >=0 THEN '+' WHEN B.FF_NATURALEZA = 'NEGA' AND A.FF_VALOR_ACTIVO < 0 THEN '+' ELSE '-' END) END), ABS(A.FF_VALOR_ACTIVO) FROM %Table(ETY_GLRT3_TMP) A, PS_FF_GL_TRNODE_VW B WHERE A.PROCESS_INSTANCE = :1 AND A.FF_TIPO_MONEDA = :2 AND A.FF_COD_FIDEICOMISO = :3 AND FF_CODIGO_SFC = :4 AND B.SETID = 'NIIF1' AND B.TREE_NAME = :5 AND A.FF_ID_REGISTRO = B.TREE_NODE_NUM AND LEDGER = 'NIIF' ORDER BY to_number(A.FF_ID_REGISTRO)", ETY_GL_INFM_AET.PROCESS_INSTANCE.Value, &str5, &strCodFideicomiso, &strFundCode, &tree_niif);
         End-If;
         /* Fin #003 */
         rem by chga 002 &sql3 = CreateSQL("SELECT A.FF_ID_REGISTRO, A.FF_TIPO_REGISTRO, RPAD(A.FF_CODIGO_PUC,6,0), (CASE WHEN A.SIGN <> ' ' THEN A.SIGN ELSE (CASE WHEN B.FF_NATURALEZA = 'POSI' AND A.FF_VALOR_ACTIVO >=0 THEN '+' WHEN B.FF_NATURALEZA = 'NEGA' AND A.FF_VALOR_ACTIVO < 0 THEN '+' ELSE '-' END) END), ABS(A.FF_VALOR_ACTIVO) FROM PS_ETY_GLRT3_TMP A, PS_FF_GL_TRNODE_VW B WHERE A.PROCESS_INSTANCE = :1 AND A.FF_TIPO_MONEDA = :2 AND A.FF_COD_FIDEICOMISO = :3 AND FF_CODIGO_SFC = :4 AND B.SETID = 'SHARE' AND B.TREE_NAME = 'PUC_SUPERFIN_FIDEI' AND A.FF_ID_REGISTRO = B.TREE_NODE_NUM ORDER BY to_number(A.FF_ID_REGISTRO)", ETY_GL_INFM_AET.PROCESS_INSTANCE.value, &str5, &strCodFideicomiso, &strFundCode);
         /*fin chga 002*/
         &bolSql3 = True;
         While &sql3.Fetch(&str1, &str2, &str3, &str4, &nbr5)
            /*Formatear numero a 20 posiciones, forzar 2 decimales y rellenar con 0 a la izquierda*/
            &str5 = NumberToString("%#020.2", &nbr5);
            &nbrI = &nbrI + 1;
            &strI = String(&nbrI);
            &str1 = Rept("0", 8 - Len(&strI)) | &strI;
            &fl_Carteras.WriteString(&str1 | &str2 | &str3 | &str4 | &str5);
            &fl_Carteras.WriteLine("");
         End-While;
      Else
         /*Son formatos, reporto registros tipo 4*/
         /***********************************/
         /*REGISTRO TIPO 4*/
         If &ledger = "DIARIO" Then
            &sql4 = CreateSQL("SELECT FF_ID_REGISTRO, FF_TIPO_REGISTRO, FF_COD_FORMATO, SIGN, FF_VALOR_ACTIVO, FF_COD_FIDEICOMISO, FF_CODIGO_SFC FROM %Table(ETY_GLRT4_TMP) WHERE PROCESS_INSTANCE = :1 AND FF_COD_FIDEICOMISO =:2 AND FF_CODIGO_SFC = :3 AND LEDGER = 'DIARIO'", ETY_GL_INFM_AET.PROCESS_INSTANCE.Value, &strCodFideicomiso, &strFundCode);
         End-If;
         If &ledger = "NIIF" Then
            &sql4 = CreateSQL("SELECT FF_ID_REGISTRO, FF_TIPO_REGISTRO, FF_COD_FORMATO, SIGN, FF_VALOR_ACTIVO, FF_COD_FIDEICOMISO, FF_CODIGO_SFC FROM %Table(ETY_GLRT4_TMP) WHERE PROCESS_INSTANCE = :1 AND FF_COD_FIDEICOMISO =:2 AND FF_CODIGO_SFC = :3 AND LEDGER = 'NIIF'", ETY_GL_INFM_AET.PROCESS_INSTANCE.Value, &strCodFideicomiso, &strFundCode);
         End-If;
         &bolSql4 = True;
         While &sql4.Fetch(&str1, &str2, &str3, &str4, &nbr5, &str6, &str7)
            /*Formatear numero a 20 posiciones, forzar 2 decimales y rellenar con 0 a la izquierda*/
            &str5 = NumberToString("%#020.2", &nbr5);
            &nbrI = &nbrI + 1;
            &strI = String(&nbrI);
            &str1 = Rept("0", 8 - Len(&strI)) | &strI;
            &fl_Carteras.WriteString(&str1 | &str2 | &str3 | &str4 | &str5);
            &fl_Carteras.WriteLine("");
         End-While;
      End-If;
   End-While;
   /***********************************/
   /*REGISTRO TIPO 5*/
   &sql5 = CreateSQL("SELECT LPAD(FF_ID_REGISTRO,8,0), FF_TIPO_REGISTRO FROM %TABLE(FF_GL_RT5_TMP)  WHERE PROCESS_INSTANCE = :1", ETY_GL_INFM_AET.PROCESS_INSTANCE.Value);
   If &sql5.Fetch(&str1, &str2) Then
      &fl_Carteras.WriteString(&str1 | &str2);
   End-If;
   /***********************************/
   &sql1.Close();
   &sql2.Close();
   If (&bolSql3) Then
      &sql3.Close();
   End-If;
   If (&bolSql4) Then
      &sql4.Close();
   End-If;
   &sql5.Close();
   &fl_Carteras.Close();
Else
   /* file not opened, do error processing */
   MessageBox(0, "", 0, 0, "File Not Opened");
End-If;
